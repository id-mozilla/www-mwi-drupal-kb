<?php
// $Id: shared_edit.module,v 1.3 2009/06/18 13:32:51 mfer Exp $
/**
 * @file
 * Contains the functionality for Shared Edit.
 */

// Include the shared edit api.
require_once(drupal_get_path('module', 'shared_edit') .'/shared_edit.api.inc');

/**
 * Implementation of hook_menu().
 */
function shared_edit_menu() {
  $items = array();
  $items['node/%node/shared_edit'] = array(
    'title' => 'Edit Access',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('shared_edit_access_form'),
    'access callback' => 'shared_edit_tab_access',
    'access arguments' => array(1),
    'weight' => 2,
    'type' => MENU_LOCAL_TASK,
    'file' => 'shared_edit.pages.inc',
  );
  $items['node/%node/shared_edit/remove/%'] = array(
    'title' => 'Remove Access',
    'page callback' => 'shared_edit_remove_user',
    'access callback' => 'shared_edit_tab_access',
    'access arguments' => array(1),
    'weight' => 2,
    'file' => 'shared_edit.pages.inc',
  );
  return $items;
}

/**
 * Implementation of hook_theme().
 */
function shared_edit_theme($existing, $type, $theme, $path) {
  return array(
    'shared_edit_access_form' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}

/**
 * Implementation of hook_perm().
 */
function shared_edit_perm() {
  return array('Share node edit access');
}

/**
 * Custom access callback to the Edit access tab
 */
function shared_edit_tab_access($node, $account = NULL) {
  if (is_null($account)) {
    global $user;
    $account = $user;
  }

  return (variable_get('shared_edit_'. $node->type, 0) && shared_edit_access($node));
}

/**
 * Implementation of hook_menu_alter().
 */
function shared_edit_menu_alter(&$items) {
  $items['node/%node/edit']['access callback'] = 'shared_edit_access';
  $items['node/%node/edit']['access arguments'] = array(1);
}

/**
 * Implementation of hook_form_FORM_NAME_alter().
 */
function shared_edit_form_node_type_form_alter(&$form, &$form_state) {
  $form['workflow']['shared_edit'] = array(
    '#type' => 'checkbox',
    '#title' => t('Allow shared edit on this node type.'),
    '#default_value' => variable_get('shared_edit_'. $form['#node_type']->type, 0),
  );
}

/**
 * Implementation of hook_nodeapi().
 */
function shared_edit_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if ($op == 'delete') {
    shared_edit_remove_all($node->nid);
  }
}